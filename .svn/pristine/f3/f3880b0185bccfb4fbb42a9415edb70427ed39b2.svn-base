package view;

import Genes.AlgGenetico;
import Genes.Cromossomo;
import com.mxgraph.model.mxCell;
import java.beans.XMLDecoder;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Random;

public class JanelaAlgGen extends javax.swing.JDialog {
    private ArrayList<Componente> comps = new ArrayList<>();
    
    public JanelaAlgGen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void iniciaForm(Object[] comps) {
        System.out.println(comps.length);
        Componente comp;
        for (Object vert : comps){
            comp = (Componente)((mxCell) vert).getValue();
            this.comps.add(comp);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfPeriod = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfElecCost = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfDemEnergy = new javax.swing.JTextField();
        cbQtdCromossomos = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbQtdGeracoes = new javax.swing.JComboBox<>();

        jLabel1.setText("Qtd cromossomos");

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancelar");

        jLabel2.setText("Period (h):");

        tfPeriod.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel3.setText("Electricity Cost (kWh):");

        tfElecCost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel4.setText("Demanded Energy (kWh)");

        tfDemEnergy.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        cbQtdCromossomos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "10", "20", "30", "50", "100" }));

        jLabel5.setText("Qtd Gerações");

        cbQtdGeracoes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "20", "50", "100", "150", "200", "300", "500", "100" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(tfDemEnergy, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbQtdCromossomos, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfElecCost)
                                .addComponent(tfPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(173, 173, 173)
                                .addComponent(cbQtdGeracoes, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbQtdCromossomos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbQtdGeracoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfElecCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfDemEnergy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK)
                    .addComponent(btnCancel))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        /*int qtdCromo = Integer.parseInt(String.valueOf(cbQtdCromossomos.getSelectedItem()));
        int period = Integer.parseInt(tfPeriod.getText());
        double ec = Double.parseDouble(tfElecCost.getText());
        int de = Integer.parseInt(tfDemEnergy.getText());
        int eras = Integer.parseInt(String.valueOf(cbQtdGeracoes.getSelectedItem()));
        new AlgGen(comps, qtdCromo, period, ec, de, eras);*/
        new AlgGenetico(comps, 50, 7000, 0.4, 1, 100);
        
        
        /*int qtdCromo = 5;
        int period = 7000;
        double ec = 0.4;
        int de = 1;
        int eras = 3000;
        new AlgGen(comps, qtdCromo, period, ec, de, eras);
        /*try {
                FileInputStream fis = new FileInputStream(new File("aleat.xml"));
                XMLDecoder decoder = new XMLDecoder(fis);
                Map<String, ArrayList<Componente>> dicComp = (HashMap<String, ArrayList<Componente>>) decoder.readObject();
                
                ArrayList<Cromossomo> cromossomos = new ArrayList<>();
                ArrayList<Componente> genes;
                Random rand = new Random();
                Cromossomo cromo;
                int cont = 0;
                while (cont< qtdCromo){
                    genes = new ArrayList<>();
                    for (Componente comp : comps) {
                        
                        String tipo = comp.getTipoComp();
                        String idVert = comp.getIdVert();
                        int var = rand.nextInt(dicComp.get(tipo).size());
                        comp = dicComp.get(tipo).get(var).clone();
                        comp.setIdVert(idVert);
                        genes.add(comp);
                    }
                    cromo = new Cromossomo(genes, period, ec, de);
                    cromossomos.add(cromo);
                    cont++;
                }
                System.out.println("aleatorios\n");
                decoder.close();
                fis.close();
                
                int aleatorios[] = new int[4];
                int range = cromossomos.size();
                aleatorios[0] = rand.nextInt(range);
                System.out.println("a" + 0 + "   " + cromossomos.get(aleatorios[0]));
                
                for (int i = 1;i < 4; i++){
                    aleatorios[i] = rand.nextInt(range);
                    System.out.println("a" + i + "   " + cromossomos.get(aleatorios[i]));
                    for (int j = 0; j < i; j++){
                        if (aleatorios[i] == aleatorios[j]){
                            i--;
                        }
                    }
                    
                }
                System.out.println("cruzamento");
                Cromossomo cromo1 = cromossomos.get(2);
                genes = (ArrayList<Componente>)(cromo1.getGenes()).clone();
                Cromossomo novo1 = new Cromossomo(genes, period, ec, de);
                
                Cromossomo cromo2 = cromossomos.get(3);
                genes = (ArrayList<Componente>)(cromo2.getGenes()).clone();
                Cromossomo novo2 = new Cromossomo(genes, period, ec, de);
                
                int qtdEqp = comps.size();
                int quebra = rand.nextInt((qtdEqp-1))+1;
                System.out.println("quebra = " + quebra + " apos cruzamento");
                int mut;
                int vari;
                int id;
                Componente comp;
                while (quebra>=0){
                    mut = rand.nextInt(10);
                    novo1.getGenes().set(quebra, cromo2.getGenes().get(quebra).clone());
                    if (mut<5){
                        System.out.println(mut + "  mut1 gene" + quebra);
                        vari = rand.nextInt(mut);
                        comp = novo1.getGenes().get(quebra);
                        id = comp.getId();
                        while (true){
                            if (!(vari == id)){
                                break;
                            }
                        }
                        String tipo = comp.getTipoComp();
                        String idVert = comp.getIdVert();
                        
                        comp = dicComp.get(tipo).get(vari).clone();
                        comp.setIdVert(idVert);
                        novo1.getGenes().set(quebra, comp);
                    }
                    mut = rand.nextInt(100);
                    novo2.getGenes().set(quebra, cromo1.getGenes().get(quebra).clone());
                    
                    quebra--;
                }
                cromo1.setScore();
                System.out.println("cromo1   " + cromo1);
                
                novo1.setScore();
                System.out.println("nv1 fit   " + novo1);
                
                cromo2.setScore();
                System.out.println("cromo2   " + cromo2);
                
                novo2.setScore();
                System.out.println("nv2 fit   " + novo2);
                
            }  catch (Exception ex) {
                ex.printStackTrace();
            }*/
        
        
    }//GEN-LAST:event_btnOKActionPerformed
    
    //private void preencher()

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JComboBox<String> cbQtdCromossomos;
    private javax.swing.JComboBox<String> cbQtdGeracoes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField tfDemEnergy;
    private javax.swing.JTextField tfElecCost;
    private javax.swing.JTextField tfPeriod;
    // End of variables declaration//GEN-END:variables
}
